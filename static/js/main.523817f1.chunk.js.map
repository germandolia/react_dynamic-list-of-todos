{"version":3,"sources":["components/Todo/Todo.tsx","components/TodoList/TodoList.tsx","api.ts","App.tsx","index.tsx"],"names":["Todo","todo","user","title","completed","className","style","color","name","TodoList","todos","map","key","id","API_URL","getData","url","a","fetch","then","response","json","dataFromServer","data","getPreparedTodos","users","todosWithUsers","find","person","userId","App","useState","setTodos","isLoading","setLoading","isLoaded","setLoaded","handleLoading","type","onClick","sort","b","localeCompare","Number","ReactDOM","render","document","getElementById"],"mappings":"oUAQaA,G,MAAkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAE9BC,EACED,EADFC,KAAMC,EACJF,EADIE,MAAOC,EACXH,EADWG,UAGf,OACE,yBAAKC,UAAU,QACb,2BAAOC,MAAO,CAAEC,MAAOH,EAAY,cAAgB,UAChDA,EAAY,OAAS,YAExB,2BAAID,GACJ,8CACWD,EAAKM,UCXTC,G,MAAsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjC,yBAAKL,UAAU,YACZK,EAAMC,KAAI,SAAAV,GAAI,OACb,kBAAC,EAAD,CAAMA,KAAMA,EAAMW,IAAKX,EAAKY,W,OCV5BC,EAAU,qCAEVC,EAAO,uCAAG,WAAUC,GAAV,eAAAC,EAAA,sEACeC,MAAMF,GAAKG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UADpD,cACRC,EADQ,yBAGPA,EAAeC,MAHR,2CAAH,sDAcAC,EAAgB,uCAAG,gCAAAP,EAAA,sEAPvBF,EAAO,UAAYD,EAAZ,UAOgB,cACxBJ,EADwB,gBAHvBK,EAAO,UAAYD,EAAZ,UAGgB,cAExBW,EAFwB,OAGxBC,EAAmChB,EAAMC,KAAI,SAAAV,GAAI,kCAClDA,GADkD,IAErDC,KAAMuB,EAAME,MAAK,SAAAC,GAAM,OAAIA,EAAOf,KAAOZ,EAAK4B,eALlB,kBAQvBH,GARuB,2CAAH,qDC8CdI,G,MA1DC,WAAO,IAAD,EACMC,mBAA2B,IADjC,mBACbrB,EADa,KACNsB,EADM,OAEYD,oBAAS,GAFrB,mBAEbE,EAFa,KAEFC,EAFE,OAGUH,oBAAS,GAHnB,mBAGbI,EAHa,KAGHC,EAHG,KAKdC,EAAa,uCAAG,sBAAApB,EAAA,6DACpBiB,GAAW,GADS,SAGdV,IAAmBL,MAAK,SAAAC,GAAQ,OAAIY,EAASZ,MAH/B,OAKpBc,GAAW,GACXE,GAAU,GANU,2CAAH,qDAqBnB,OAAIH,EAEA,wBAAI5B,UAAU,gBAAd,cAOF,yBAAKA,UAAU,OACb,wBAAIA,UAAU,gBAAd,0BACE8B,GACA,yBAAK9B,UAAU,aACb,4BAAQiC,KAAK,SAASjC,UAAU,gBAAgBkC,QAASF,GAAzD,uBAKHF,GACC,oCACE,yBAAK9B,UAAU,aACb,4BAAQiC,KAAK,SAASjC,UAAU,gBAAgBkC,QAjCvC,WACjBP,EAAS,YAAItB,GAAO8B,MAAK,SAACvB,EAAGwB,GAAJ,OAAUxB,EAAEd,MAAMuC,cAAcD,EAAEtC,aAgCnD,iBACA,4BAAQmC,KAAK,SAASjC,UAAU,gBAAgBkC,QA9BjC,WACvBP,EAAS,YAAItB,GAAO8B,MAAK,SAACvB,EAAGwB,GAAJ,OAAUE,OAAO1B,EAAEb,WAAauC,OAAOF,EAAErC,iBA6B1D,sBACA,4BAAQkC,KAAK,SAASjC,UAAU,gBAAgBkC,QA3BvC,WACjBP,EAAS,YAAItB,GAAO8B,MAAK,SAACvB,EAAGwB,GAAJ,OAAUxB,EAAEf,KAAKM,KAAKkC,cAAcD,EAAEvC,KAAKM,YA0B5D,sBAEF,kBAAC,EAAD,CAAUE,MAAOA,QCrD3BkC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.523817f1.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { TodosWithUsers } from '../../interfaces';\nimport './Todo.css';\n\ninterface Props {\n  todo: TodosWithUsers;\n}\n\nexport const Todo: FC<Props> = ({ todo }) => {\n  const {\n    user, title, completed,\n  } = todo;\n\n  return (\n    <div className=\"Todo\">\n      <small style={{ color: completed ? 'yellowgreen' : 'coral' }}>\n        {completed ? 'done' : 'not done'}\n      </small>\n      <p>{title}</p>\n      <small>\n        {`For: ${user.name}`}\n      </small>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Todo } from '../Todo/Todo';\nimport { TodosWithUsers } from '../../interfaces';\nimport './TodoList.css';\n\ninterface Props {\n  todos: TodosWithUsers[];\n}\n\nexport const TodoList: FC<Props> = ({ todos }) => (\n  <div className=\"TodoList\">\n    {todos.map(todo => (\n      <Todo todo={todo} key={todo.id} />\n    ))}\n  </div>\n);\n","import { User, Todo, TodosWithUsers } from './interfaces';\n\nconst API_URL = 'https://mate.academy/students-api/';\n\nconst getData = async <T>(url: string): Promise<T> => {\n  const dataFromServer = await fetch(url).then(response => response.json());\n\n  return dataFromServer.data;\n};\n\nconst getTodos = (): Promise<Todo[]> => {\n  return getData<Todo[]>(`${API_URL}todos`);\n};\n\nconst getUsers = (): Promise<User[]> => {\n  return getData<User[]>(`${API_URL}users`);\n};\n\nexport const getPreparedTodos = async (): Promise<TodosWithUsers[]> => {\n  const todos: Todo[] = await getTodos();\n  const users: User[] = await getUsers();\n  const todosWithUsers: TodosWithUsers[] = todos.map(todo => ({\n    ...todo,\n    user: users.find(person => person.id === todo.userId) as User,\n  }));\n\n  return todosWithUsers;\n};\n","import React, { useState, FC } from 'react';\nimport { TodosWithUsers } from './interfaces';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { getPreparedTodos } from './api';\nimport './App.css';\n\nconst App: FC = () => {\n  const [todos, setTodos] = useState<TodosWithUsers[]>([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n\n  const handleLoading = async () => {\n    setLoading(true);\n\n    await getPreparedTodos().then(response => setTodos(response));\n\n    setLoading(false);\n    setLoaded(true);\n  };\n\n  const sortByName = () => {\n    setTodos([...todos].sort((a, b) => a.title.localeCompare(b.title)));\n  };\n\n  const sortByCompletion = () => {\n    setTodos([...todos].sort((a, b) => Number(a.completed) - Number(b.completed)));\n  };\n\n  const sortByUser = () => {\n    setTodos([...todos].sort((a, b) => a.user.name.localeCompare(b.user.name)));\n  };\n\n  if (isLoading) {\n    return (\n      <h1 className=\"App__heading\">\n        Loading...\n      </h1>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__heading\">Dynamic list of TODOs</h1>\n      {!isLoaded && (\n        <div className=\"App__menu\">\n          <button type=\"button\" className=\"App__menu-btn\" onClick={handleLoading}>\n            Load List of Todos\n          </button>\n        </div>\n      )}\n      {isLoaded && (\n        <>\n          <div className=\"App__menu\">\n            <button type=\"button\" className=\"App__menu-btn\" onClick={sortByName}>Sort by Title</button>\n            <button type=\"button\" className=\"App__menu-btn\" onClick={sortByCompletion}>Sort by Completion</button>\n            <button type=\"button\" className=\"App__menu-btn\" onClick={sortByUser}>Sort by User Name</button>\n          </div>\n          <TodoList todos={todos} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}